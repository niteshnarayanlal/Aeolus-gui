#############################################################################
# Makefile for building: Aeolus
# Generated by qmake (2.01a) (Qt 4.8.0) on: Fri Jun 8 11:04:50 2012
# Project:  Aeolus.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/lib64/qt4/mkspecs/linux-g++-64 -o Makefile Aeolus.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/lib64/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include/QtGui -I/usr/include -I. -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib64 -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = BuilderAndPusher.cpp \
		InitialConfiguration.cpp \
		Login.cpp \
		main.cpp \
		CatalogCreatorAndDeployer.cpp moc_BuilderAndPusher.cpp \
		moc_CatalogCreatorAndDeployer.cpp \
		moc_InitialConfiguration.cpp \
		moc_Login.cpp \
		qrc_images.cpp
OBJECTS       = BuilderAndPusher.o \
		InitialConfiguration.o \
		Login.o \
		main.o \
		CatalogCreatorAndDeployer.o \
		moc_BuilderAndPusher.o \
		moc_CatalogCreatorAndDeployer.o \
		moc_InitialConfiguration.o \
		moc_Login.o \
		qrc_images.o
DIST          = /usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt4/mkspecs/common/g++-base.conf \
		/usr/lib64/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/lib64/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		Aeolus.pro
QMAKE_TARGET  = Aeolus
DESTDIR       = 
TARGET        = Aeolus

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_BuilderAndPusher.h ui_CatalogCreatorAndDeployer.h ui_InitialConfiguration.h ui_Login.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Aeolus.pro  /usr/lib64/qt4/mkspecs/linux-g++-64/qmake.conf /usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt4/mkspecs/common/g++-base.conf \
		/usr/lib64/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/lib64/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		/usr/lib64/qt4/mkspecs/features/release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib64/libQtGui.prl \
		/usr/lib64/libQtCore.prl \
		/usr/lib64/libQtNetwork.prl
	$(QMAKE) -spec /usr/lib64/qt4/mkspecs/linux-g++-64 -o Makefile Aeolus.pro
/usr/lib64/qt4/mkspecs/common/unix.conf:
/usr/lib64/qt4/mkspecs/common/linux.conf:
/usr/lib64/qt4/mkspecs/common/gcc-base.conf:
/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/lib64/qt4/mkspecs/common/g++-base.conf:
/usr/lib64/qt4/mkspecs/common/g++-unix.conf:
/usr/lib64/qt4/mkspecs/qconfig.pri:
/usr/lib64/qt4/mkspecs/modules/qt_phonon.pri:
/usr/lib64/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/lib64/qt4/mkspecs/features/qt_functions.prf:
/usr/lib64/qt4/mkspecs/features/qt_config.prf:
/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib64/qt4/mkspecs/features/default_pre.prf:
/usr/lib64/qt4/mkspecs/features/release.prf:
/usr/lib64/qt4/mkspecs/features/default_post.prf:
/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/lib64/qt4/mkspecs/features/warn_on.prf:
/usr/lib64/qt4/mkspecs/features/qt.prf:
/usr/lib64/qt4/mkspecs/features/unix/thread.prf:
/usr/lib64/qt4/mkspecs/features/moc.prf:
/usr/lib64/qt4/mkspecs/features/resources.prf:
/usr/lib64/qt4/mkspecs/features/uic.prf:
/usr/lib64/qt4/mkspecs/features/yacc.prf:
/usr/lib64/qt4/mkspecs/features/lex.prf:
/usr/lib64/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib64/libQtGui.prl:
/usr/lib64/libQtCore.prl:
/usr/lib64/libQtNetwork.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/lib64/qt4/mkspecs/linux-g++-64 -o Makefile Aeolus.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Aeolus1.0.0 || $(MKDIR) .tmp/Aeolus1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Aeolus1.0.0/ && $(COPY_FILE) --parents BuilderAndPusher.h CatalogCreatorAndDeployer.h InitialConfiguration.h Login.h .tmp/Aeolus1.0.0/ && $(COPY_FILE) --parents images.qrc .tmp/Aeolus1.0.0/ && $(COPY_FILE) --parents BuilderAndPusher.cpp InitialConfiguration.cpp Login.cpp main.cpp CatalogCreatorAndDeployer.cpp .tmp/Aeolus1.0.0/ && $(COPY_FILE) --parents BuilderAndPusher.ui CatalogCreatorAndDeployer.ui InitialConfiguration.ui Login.ui .tmp/Aeolus1.0.0/ && (cd `dirname .tmp/Aeolus1.0.0` && $(TAR) Aeolus1.0.0.tar Aeolus1.0.0 && $(COMPRESS) Aeolus1.0.0.tar) && $(MOVE) `dirname .tmp/Aeolus1.0.0`/Aeolus1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Aeolus1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_BuilderAndPusher.cpp moc_CatalogCreatorAndDeployer.cpp moc_InitialConfiguration.cpp moc_Login.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_BuilderAndPusher.cpp moc_CatalogCreatorAndDeployer.cpp moc_InitialConfiguration.cpp moc_Login.cpp
moc_BuilderAndPusher.cpp: ui_BuilderAndPusher.h \
		BuilderAndPusher.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) BuilderAndPusher.h -o moc_BuilderAndPusher.cpp

moc_CatalogCreatorAndDeployer.cpp: ui_CatalogCreatorAndDeployer.h \
		CatalogCreatorAndDeployer.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) CatalogCreatorAndDeployer.h -o moc_CatalogCreatorAndDeployer.cpp

moc_InitialConfiguration.cpp: ui_InitialConfiguration.h \
		InitialConfiguration.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) InitialConfiguration.h -o moc_InitialConfiguration.cpp

moc_Login.cpp: ui_Login.h \
		Login.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) Login.h -o moc_Login.cpp

compiler_rcc_make_all: qrc_images.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_images.cpp
qrc_images.cpp: images.qrc \
		images/aeolus-logo.png \
		images/aeolus-logo60*60.png
	/usr/lib64/qt4/bin/rcc -name images images.qrc -o qrc_images.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_BuilderAndPusher.h ui_CatalogCreatorAndDeployer.h ui_InitialConfiguration.h ui_Login.h
compiler_uic_clean:
	-$(DEL_FILE) ui_BuilderAndPusher.h ui_CatalogCreatorAndDeployer.h ui_InitialConfiguration.h ui_Login.h
ui_BuilderAndPusher.h: BuilderAndPusher.ui
	/usr/lib64/qt4/bin/uic BuilderAndPusher.ui -o ui_BuilderAndPusher.h

ui_CatalogCreatorAndDeployer.h: CatalogCreatorAndDeployer.ui
	/usr/lib64/qt4/bin/uic CatalogCreatorAndDeployer.ui -o ui_CatalogCreatorAndDeployer.h

ui_InitialConfiguration.h: InitialConfiguration.ui
	/usr/lib64/qt4/bin/uic InitialConfiguration.ui -o ui_InitialConfiguration.h

ui_Login.h: Login.ui
	/usr/lib64/qt4/bin/uic Login.ui -o ui_Login.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

BuilderAndPusher.o: BuilderAndPusher.cpp BuilderAndPusher.h \
		ui_BuilderAndPusher.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BuilderAndPusher.o BuilderAndPusher.cpp

InitialConfiguration.o: InitialConfiguration.cpp InitialConfiguration.h \
		ui_InitialConfiguration.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o InitialConfiguration.o InitialConfiguration.cpp

Login.o: Login.cpp Login.h \
		ui_Login.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Login.o Login.cpp

main.o: main.cpp Login.h \
		ui_Login.h \
		InitialConfiguration.h \
		ui_InitialConfiguration.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

CatalogCreatorAndDeployer.o: CatalogCreatorAndDeployer.cpp CatalogCreatorAndDeployer.h \
		ui_CatalogCreatorAndDeployer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CatalogCreatorAndDeployer.o CatalogCreatorAndDeployer.cpp

moc_BuilderAndPusher.o: moc_BuilderAndPusher.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_BuilderAndPusher.o moc_BuilderAndPusher.cpp

moc_CatalogCreatorAndDeployer.o: moc_CatalogCreatorAndDeployer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_CatalogCreatorAndDeployer.o moc_CatalogCreatorAndDeployer.cpp

moc_InitialConfiguration.o: moc_InitialConfiguration.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_InitialConfiguration.o moc_InitialConfiguration.cpp

moc_Login.o: moc_Login.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Login.o moc_Login.cpp

qrc_images.o: qrc_images.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_images.o qrc_images.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

